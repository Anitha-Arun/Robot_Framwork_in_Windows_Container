trigger:
- main

pool:
  vmImage: 'windows-latest'
  name: Default


steps:
- script: |
    echo "Building Docker image..."
    docker build -t android-sdk-image .
  displayName: 'Build Docker Image'

- script: |
    echo "Removing existing container if it exists..."
    docker rm -f android-sdk-container || true
  displayName: 'Remove Existing Container'

- script: |
    echo "Accepting Android SDK licenses..."
    docker exec android-sdk-container cmd /c "
    echo Attempting to accept Android SDK licenses...
    set SDKMANAGER=C:\Users\v-adamarla\AppData\Local\Android\Sdk\cmdline-tools\latest\bin\sdkmanager.bat
    if exist %SDKMANAGER% (
        echo Found sdkmanager at: %SDKMANAGER%
        echo Creating temporary response file...
        echo y > %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo y >> %TEMP%\sdk_response.txt
        echo Accepting licenses...
        %SDKMANAGER% --licenses < %TEMP%\sdk_response.txt
        if %ERRORLEVEL% EQU 0 (
            echo Licenses accepted successfully.
        ) else (
            echo Failed to accept licenses. Error code: %ERRORLEVEL%
            exit /b 1
        )
        del %TEMP%\sdk_response.txt
    ) else (
        echo sdkmanager not found at expected location. Please check your Android SDK installation.
        exit /b 1
    )
    "
  displayName: 'Accept Android SDK Licenses'

- script: |
    echo "Cleaning up..."
    docker stop android-sdk-container
    docker rm android-sdk-container
  displayName: 'Clean Up'
