trigger:
- main

pool:
  vmImage: 'windows-latest' 
  name: Default

steps:
- checkout: self

- script: |
    echo "Building Docker image..."
    docker build -t my-custom-image:latest .
  displayName: 'Build Docker Image'

- script: |
    echo "Removing existing container if it exists..."
    docker rm -f my-container || true
  displayName: 'Remove Existing Container'

- script: |
    echo "Running Docker container..."
    docker run --name my-container -d my-custom-image:latest powershell -Command "Start-Sleep -Seconds 3600"
  displayName: 'Run Docker Container'

- script: |
    echo "Accepting Android SDK licenses..."
    docker exec my-container powershell -Command "
    $ErrorActionPreference = 'Stop';
    $sdkmanagerPath = 'C:\\android-sdk\\cmdline-tools\\latest\\bin\\sdkmanager.bat';
    if (Test-Path $sdkmanagerPath) {
        Write-Output 'Found sdkmanager at: $sdkmanagerPath';
        $process = Start-Process -FilePath $sdkmanagerPath -ArgumentList '--licenses' -NoNewWindow -PassThru -Wait -RedirectStandardInput 'C:\\temp\\input.txt';
        Write-Output 'Accepting licenses...';
        $inputFile = 'C:\\temp\\input.txt';
        if (Test-Path $inputFile) {
            Add-Content -Path $inputFile -Value 'y';
            Start-Process -FilePath $sdkmanagerPath -ArgumentList '--licenses' -NoNewWindow -Wait -RedirectStandardInput $inputFile;
            Write-Output 'Licenses accepted successfully.';
        } else {
            Write-Output 'Input file not found. Failed to accept licenses.';
            exit 1;
        }
    } else {
        Write-Output 'sdkmanager not found at expected location. Please check your Android SDK installation.';
        exit 1;
    }
    "
  displayName: 'Accept Android SDK Licenses'

- script: |
    echo "Installing Android platform tools, build tools, and platform..."
    docker exec my-container powershell -Command "C:\\android-sdk\\cmdline-tools\\latest\\bin\\sdkmanager.bat 'platform-tools' 'platforms;android-28' 'build-tools;28.0.3'"
  displayName: 'Install Android SDK Components'

- script: |
    echo "Verifying ADB installation..."
    docker exec my-container powershell -Command "C:\\android-sdk\\platform-tools\\adb.exe version"
  displayName: 'Verify ADB Installation'

- script: |
    echo "Running appium-doctor to check setup..."
    docker exec my-container powershell -Command "appium-doctor"
  displayName: 'Run Appium Doctor'

- script: |
    echo "Stopping Docker container..."
    docker stop my-container
    docker rm my-container
  displayName: 'Stop and Remove Docker Container'
