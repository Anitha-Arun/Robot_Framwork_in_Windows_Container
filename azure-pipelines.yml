trigger:
- main

pool:
  vmImage: 'windows-latest'
  name: Default

steps:
- checkout: self

- task: Docker@2
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
    imageName: 'my-custom-image'
  displayName: 'Build Docker Image'

- powershell: |
    echo "Removing existing container if it exists..."
    docker rm -f my-container || true
  displayName: 'Remove Existing Container'

- powershell: |
    echo "Running Docker container..."
    docker run --name my-container -d my-custom-image:latest powershell -Command "Start-Sleep -Seconds 3600"
  displayName: 'Run Docker Container'

- powershell: |
    echo "Accepting Android SDK licenses..."
    docker exec my-container powershell -Command "C:\\android-sdk\\cmdline-tools\\latest\\bin\\sdkmanager.bat --licenses | ForEach-Object { 'y' }"
  displayName: 'Accept Android SDK Licenses'

- powershell: |
    echo "Installing Android platform tools, build tools, and platform..."
    docker exec my-container powershell -Command "C:\\android-sdk\\cmdline-tools\\latest\\bin\\sdkmanager.bat 'platform-tools' 'platforms;android-28' 'build-tools;28.0.3'"
  displayName: 'Install Android SDK Components'

- powershell: |
    echo "Verifying ADB installation..."
    docker exec my-container powershell -Command "C:\\android-sdk\\platform-tools\\adb.exe version"
  displayName: 'Verify ADB Installation'

- powershell: |
    echo "Running appium-doctor to check setup..."
    docker exec my-container powershell -Command "appium-doctor"
  displayName: 'Run Appium Doctor'

- powershell: |
    echo "Stopping Docker container..."
    docker stop my-container
    docker rm my-container
  displayName: 'Stop and Remove Docker Container'
  condition: always()  # Ensure cleanup runs even if previous steps fail
